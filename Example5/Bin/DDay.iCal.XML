<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DDay.iCal</name>
    </assembly>
    <members>
        <member name="T:DDay.iCal.Components.Alarm">
            <summary>
            A class that represents an RFC 2445 VALARM component.
            </summary>
        </member>
        <member name="T:DDay.iCal.Objects.ComponentBase">
            <summary>
            This class is used by the parsing framework as a factory class
            for <see cref="T:DDay.iCal.iCalendar"/> components.  Generally, you should
            not need to use this class directly.
            </summary>
        </member>
        <member name="T:DDay.iCal.Objects.iCalObject">
            <summary>
            The base class for all iCalendar objects, components, and data types.
            </summary>
        </member>
        <member name="M:DDay.iCal.Objects.iCalObject.AddChild(DDay.iCal.Objects.iCalObject)">
            <summary>
            Adds an <see cref="T:DDay.iCal.Objects.iCalObject"/>-based object as a child
            of the current object.
            </summary>
            <param name="child">The <see cref="T:DDay.iCal.Objects.iCalObject"/>-based object to add.</param>
        </member>
        <member name="M:DDay.iCal.Objects.iCalObject.RemoveChild(DDay.iCal.Objects.iCalObject)">
            <summary>
            Removed an <see cref="T:DDay.iCal.Objects.iCalObject"/>-based object from the <see cref="P:DDay.iCal.Objects.iCalObject.Children"/>
            collection.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:DDay.iCal.Objects.iCalObject.SetContentLineValue(DDay.iCal.Objects.ContentLine)">
            <summary>
            For iCalendar components, automatically finds and retrieves fields that
            match the field specified in the <see cref="T:DDay.iCal.Objects.ContentLine"/>, and sets
            their value.
            <example>
            For example, if a public DTStart field exists in the specified component,
            (i.e. <c>public Date_Time DTStart;</c>)
            and a content line of <c>DTSTART;TZID=US-Eastern:20060830T090000</c> is
            encountered, this method will automatically set the value of the
            DTStart field to Aug. 30, 2006, 9:00 AM in the US-Eastern TimeZone.
            </example>
            <note>
                It should not be necessary to invoke this method manually as it
                is handled automatically during the iCalendar parsing.
            </note>
            </summary>
            <param name="cl">The <see cref="T:DDay.iCal.Objects.ContentLine"/> to process.</param>
        </member>
        <member name="M:DDay.iCal.Objects.iCalObject.OnLoad(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:DDay.iCal.Objects.iCalObject.Load"/> event handler when the object has been fully loaded.
            This is automatically called when processing objects that inherit from 
            <see cref="T:DDay.iCal.Objects.ComponentBase"/> (i.e. all iCalendar components).
            </summary>
        </member>
        <member name="M:DDay.iCal.Objects.iCalObject.Copy">
            <summary>
            Creates a copy of the <see cref="T:DDay.iCal.Objects.iCalObject"/>.
            </summary>
            <returns>The copy of the <see cref="T:DDay.iCal.Objects.iCalObject"/>.</returns>
        </member>
        <member name="P:DDay.iCal.Objects.iCalObject.Properties">
            <summary>
            Returns a list of properties that are associated with the iCalendar object.
            </summary>
        </member>
        <member name="P:DDay.iCal.Objects.iCalObject.Parameters">
            <summary>
            Returns a list of parameters that are associated with the iCalendar object.
            </summary>
        </member>
        <member name="P:DDay.iCal.Objects.iCalObject.Children">
            <summary>
            A collection of <see cref="T:DDay.iCal.Objects.iCalObject"/>s that are children 
            of the current object.
            </summary>
        </member>
        <member name="P:DDay.iCal.Objects.iCalObject.Name">
            <summary>
            Gets or sets the name of the <see cref="T:DDay.iCal.Objects.iCalObject"/>.  For iCalendar components,
            this is the RFC 2445 name of the component.
            <example>
                <list type="bullet">
                    <item>Event - "VEVENT"</item>
                    <item>Todo - "VTODO"</item>
                    <item>TimeZone - "VTIMEZONE"</item>
                    <item>etc.</item>
                </list>
            </example>
            </summary>        
        </member>
        <member name="P:DDay.iCal.Objects.iCalObject.iCalendar">
            <summary>
            Returns the <see cref="T:DDay.iCal.iCalendar"/> that this <see cref="T:DDay.iCal.Objects.iCalObject"/>
            belongs to.
            </summary>
        </member>
        <member name="M:DDay.iCal.Components.Alarm.Evaluate(DDay.iCal.Objects.RecurringComponent)">
            <summary>
            Evaluates <see cref="T:DDay.iCal.Components.Alarm"/>s for the given recurring component, <paramref name="rc"/>.
            This evaluation is based on the evaluation period for the <see cref="T:DDay.iCal.Objects.RecurringComponent"/>.        
            </summary>
            <param name="rc">The </param>
            <returns></returns>
        </member>
        <member name="M:DDay.iCal.Components.Alarm.Poll(DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Polls the <see cref="T:DDay.iCal.Components.Alarm"/> component for alarms that have been triggered
            since the provided <paramref name="Start"/> date/time.  If <paramref name="Start"/>
            is null, all triggered alarms will be returned.
            </summary>
            <param name="Start">The earliest date/time to poll trigerred alarms for.</param>
            <returns>A list of <see cref="T:DDay.iCal.Components.Alarm.AlarmOccurrence"/> objects, each containing a triggered alarm.</returns>
        </member>
        <member name="M:DDay.iCal.Components.Alarm.Copy">
            <summary>
            Returns a typed copy of the Alarm.
            </summary>
            <returns>A typed copy of the Alarm object.</returns>
        </member>
        <member name="M:DDay.iCal.Components.Alarm.AddRepeatedItems">
            <summary>
            Handles the repetitions that occur from the <c>REPEAT</c> and
            <c>DURATION</c> properties.  Each recurrence of the alarm will
            have its own set of generated repetitions.
            </summary>
        </member>
        <member name="T:DDay.iCal.Components.Alarm.AlarmOccurrence">
            <summary>
            A class that represents a specific occurrence of an <see cref="F:DDay.iCal.Components.Alarm.AlarmOccurrence.Alarm"/>.        
            </summary>
            <remarks>
            The <see cref="T:DDay.iCal.Components.Alarm.AlarmOccurrence"/> contains the <see cref="T:DDay.iCal.DataTypes.Date_Time"/> when
            the alarm occurs, the <see cref="F:DDay.iCal.Components.Alarm.AlarmOccurrence.Alarm"/> that fired, and the 
            component on which the alarm fired.
            </remarks>
        </member>
        <member name="T:DDay.iCal.Objects.ContentLine">
            <summary>
            This class represents a single line of text in an <see cref="T:DDay.iCal.iCalendar"/>
            (.ics) file.
            </summary>
            <remarks>
            In the RFC 2445 specification, content lines are wrapped
            with a newline, followed by a whitespace character, after they surpass
            75 characters in length.  Therefore, a <see cref="T:DDay.iCal.Objects.ContentLine"/> represents
            this entire line, after "unwrapping" the newline + whitespace character
            sequence.
            </remarks>
        </member>
        <member name="T:DDay.iCal.DataTypes.URI">
            <summary>
            An iCalendar URI (Universal Resource Identifier) value.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.iCalDataType">
            <summary>
            An abstract class from which all iCalendar data types inherit.
            </summary>
        </member>
        <member name="M:DDay.iCal.DataTypes.URI.op_Implicit(System.String)~DDay.iCal.DataTypes.URI">
            <summary>
            FIXME: create a TypeConverter from string to URI so strings will automatically
            be converted to URI objects when using late-binding means of setting the value.
            i.e. reflection - PropertyInfo.SetValue(...).
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="T:DDay.iCal.DataTypes.Date_Time">
            <summary>
            The iCalendar equivalent of the .NET <see cref="T:System.DateTime"/> class.
            <remarks>
            In addition to the features of the <see cref="T:System.DateTime"/> class, the <see cref="T:DDay.iCal.DataTypes.Date_Time"/>
            class handles time zone differences, and integrates seamlessly into
            the iCalendar framework.
            </remarks>
            </summary>
        </member>
        <member name="P:DDay.iCal.DataTypes.Date_Time.Local">
            <summary>
            Converts the date/time to the computer's local date/time.
            </summary>
        </member>
        <member name="P:DDay.iCal.DataTypes.Date_Time.UTC">
            <summary>
            Converts the date/time to UTC (Coordinated Universal Time)
            </summary>
        </member>
        <member name="P:DDay.iCal.DataTypes.Date_Time.TimeZoneInfo">
            <summary>
            Retrieves the <see cref="P:DDay.iCal.DataTypes.Date_Time.TimeZoneInfo"/> object for the time
            zone set by <see cref="P:DDay.iCal.DataTypes.Date_Time.TZID"/>.
            </summary>
        </member>
        <member name="P:DDay.iCal.DataTypes.Date_Time.iCalendar">
            <summary>
            Sets/Gets the iCalendar associated with this <see cref="T:DDay.iCal.DataTypes.Date_Time"/>.
            <note>
            This property cannot be <see cref="!:null"/> when the <see cref="P:DDay.iCal.DataTypes.Date_Time.TZID"/>
            has been set for this <see cref="T:DDay.iCal.DataTypes.Date_Time"/> object.
            </note>
            </summary>
        </member>
        <member name="T:DDay.iCal.Objects.Property">
            <summary>
            A class that represents a property of the <see cref="T:DDay.iCal.iCalendar"/>
            itself, or a non-standard (X-) property of an iCalendar component,
            as seen with many applications, such as with Apple's iCal.
            X-WR-CALNAME:US Holidays
            </summary>
            <remarks>
            Currently, the "known" properties for an iCalendar are as
            follows:
            <list type="bullet">
                <item>ProdID</item>
                <item>Version</item>
                <item>CalScale</item>
                <item>Method</item>
            </list>
            There may be other, custom X-properties applied to the calendar,
            and X-properties may be applied to calendar components.
            </remarks>
        </member>
        <member name="T:DDay.iCal.Components.Journal">
            <summary>
            A class that represents an RFC 2445 VJOURNAL component.
            </summary>
        </member>
        <member name="T:DDay.iCal.Objects.RecurringComponent">
            <summary>
            An iCalendar component that recurs.
            </summary>
            <remarks>
            This component automatically handles
            <see cref="!:RRULE"/>s, <see cref="!:RDATE"/>s, <see cref="!:EXRULE"/>s, and
            <see cref="!:EXDATE"/>s, as well as the <see cref="!:DTSTART"/>
            for the recurring item (all recurring items must have a DTSTART).
            </remarks>
        </member>
        <member name="T:DDay.iCal.Objects.UniqueComponent">
            <summary>
            Represents a unique component, a component with a unique UID,
            which can be used to uniquely identify the component.
            </summary>
        </member>
        <member name="M:DDay.iCal.Objects.RecurringComponent.AddRecurrence(DDay.iCal.DataTypes.Recur)">
            <summary>
            Adds a recurrence rule to the recurring component
            </summary>
            <param name="recur">The recurrence rule to add</param>
        </member>
        <member name="M:DDay.iCal.Objects.RecurringComponent.AddException(DDay.iCal.DataTypes.Recur)">
            <summary>
            Adds an exception recurrence rule to the recurring component
            </summary>
            <param name="recur">The recurrence rule to add</param>
        </member>
        <member name="M:DDay.iCal.Objects.RecurringComponent.Evaluate(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Evaluates this item to determine the dates and times for which it occurs/recurs.
            This method only evaluates items which occur/recur between <paramref name="FromDate"/>
            and <paramref name="ToDate"/>; therefore, if you require a list of items which
            occur outside of this range, you must specify a <paramref name="FromDate"/> and
            <paramref name="ToDate"/> which encapsulate the date(s) of interest.
            <note type="caution">
                For events with very complex recurrence rules, this method may be a bottleneck
                during processing time, especially when this method is called for a large number
                of items, in sequence, or for a very large time span.
            </note>
            </summary>
            <param name="FromDate">The beginning date of the range to evaluate.</param>
            <param name="ToDate">The end date of the range to evaluate.</param>
            <returns>
                An <see cref="T:System.Collections.ArrayList"/> containing a <see cref="T:DDay.iCal.DataTypes.Date_Time"/> object for
                each date/time this item occurs/recurs.
            </returns>
        </member>
        <member name="M:DDay.iCal.Objects.RecurringComponent.ClearEvaluation">
            <summary>
            Clears a previous evaluation, usually because one of the 
            key elements used for evaluation has changed 
            (Start, End, Duration, recurrence rules, exceptions, etc.).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDay.iCal.Objects.RecurringComponent.PollAlarms(DDay.iCal.DataTypes.Date_Time)" -->
        <member name="M:DDay.iCal.Objects.RecurringComponent.EvaluateRRule(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Evaulates the RRule component, and adds each specified Period
            to the <see cref="P:DDay.iCal.Objects.RecurringComponent.Periods"/> collection.
            </summary>
            <param name="FromDate">The beginning date of the range to evaluate.</param>
            <param name="ToDate">The end date of the range to evaluate.</param>
        </member>
        <member name="M:DDay.iCal.Objects.RecurringComponent.EvaluateRDate(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Evalates the RDate component, and adds each specified DateTime or
            Period to the <see cref="P:DDay.iCal.Objects.RecurringComponent.Periods"/> collection.
            </summary>
            <param name="FromDate">The beginning date of the range to evaluate.</param>
            <param name="ToDate">The end date of the range to evaluate.</param>
        </member>
        <member name="M:DDay.iCal.Objects.RecurringComponent.EvaluateExRule(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Evaulates the ExRule component, and excludes each specified DateTime
            from the <see cref="P:DDay.iCal.Objects.RecurringComponent.Periods"/> collection.
            </summary>
            <param name="FromDate">The beginning date of the range to evaluate.</param>
            <param name="ToDate">The end date of the range to evaluate.</param>
        </member>
        <member name="M:DDay.iCal.Objects.RecurringComponent.EvaluateExDate(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Evalates the ExDate component, and excludes each specified DateTime or
            Period from the <see cref="P:DDay.iCal.Objects.RecurringComponent.Periods"/> collection.
            </summary>
            <param name="FromDate">The beginning date of the range to evaluate.</param>
            <param name="ToDate">The end date of the range to evaluate.</param>
        </member>
        <member name="P:DDay.iCal.Objects.RecurringComponent.DTStart">
            <summary>
            The start date/time of the component.
            </summary>
        </member>
        <member name="P:DDay.iCal.Objects.RecurringComponent.Periods">
            <summary>
            A collection of <see cref="T:DDay.iCal.DataTypes.Period"/> objects that contain the dates and times
            when each item occurs/recurs.
            </summary>
        </member>
        <member name="P:DDay.iCal.Objects.RecurringComponent.Start">
            <summary>
            An alias to the DTStart field (i.e. start date/time).
            </summary>
        </member>
        <member name="P:DDay.iCal.Objects.RecurringComponent.Alarms">
            <summary>
            A list of <see cref="T:DDay.iCal.Components.Alarm"/>s for this recurring component.
            </summary>
        </member>
        <member name="M:DDay.iCal.Components.Journal.Copy">
            <summary>
            Returns a typed copy of the Journal object.
            </summary>
            <returns>A typed copy of the Journal object.</returns>
        </member>
        <member name="T:DDay.iCal.DataTypes.Transparency">
            <summary>
            Determines whether or not an event is represented
            as "busy"-time, or "free"-time.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Trigger">
            <summary>
            A class that is used to specify exactly when an <see cref="!:Alarm"/> component will trigger.
            Usually this date/time is relative to the component to which the Alarm is associated.
            </summary>    
        </member>
        <member name="T:DDay.iCal.Components.TimeZone">
            <summary>
            A class that represents an RFC 2445 VTIMEZONE component.
            </summary>
        </member>
        <member name="M:DDay.iCal.Components.TimeZone.Copy">
            <summary>
            Returns a typed copy of the TimeZone object.
            </summary>
            <returns>A typed copy of the TimeZone object</returns>
        </member>
        <member name="M:DDay.iCal.Components.TimeZone.GetTimeZoneInfo(DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Retrieves the TimeZoneInfo object that contains information
            about the TimeZone, with the name of the current timezone,
            offset from UTC, etc.
            </summary>
            <param name="dt">The Date_Time object for which to retrieve the TimeZoneInfo</param>
            <returns>A TimeZoneInfo object for the specified Date_Time</returns>
        </member>
        <member name="T:DDay.iCal.Components.TimeZone.TimeZoneInfo">
            <summary>
            A class that contains time zone information, and is usually accessed
            from an iCalendar object using the <see cref="M:DDay.iCal.iCalendar.GetTimeZone(DDay.iCal.DataTypes.TZID)"/> method.        
            </summary>
        </member>
        <member name="M:DDay.iCal.Components.TimeZone.TimeZoneInfo.Copy">
            <summary>
            Returns a typed copy of the TimeZoneInfo object.
            </summary>
            <returns>A typed copy of the TimeZoneInfo object.</returns>
        </member>
        <member name="M:DDay.iCal.Components.TimeZone.TimeZoneInfo.Copy(DDay.iCal.Objects.iCalObject)">
            <summary>
            Creates a copy of the <see cref="T:DDay.iCal.Components.TimeZone.TimeZoneInfo"/> object.
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.TimeZone.TimeZoneInfo.TimeZoneName">
            <summary>
            Returns the name of the current Time Zone.
            <example>
                The following are examples:
                <list type="bullet">
                    <item>EST</item>
                    <item>EDT</item>
                    <item>MST</item>
                    <item>MDT</item>
                </list>
            </example>
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.TimeZone.TimeZoneInfo.DTStart">
            <summary>
            Force the DTSTART into a local date-time value.
            
            From RFC 2445:
            The mandatory "DTSTART" property gives the effective onset date and 
            local time for the time zone sub-component definition. "DTSTART" in
            this usage MUST be specified as a local DATE-TIME value.
            
            Also from RFC 2445:
            The date with local time form is simply a date-time value that does
            not contain the UTC designator nor does it reference a time zone. For
            example, the following represents Janurary 18, 1998, at 11 PM:
            
            DTSTART:19980118T230000
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Cal_Address">
            <summary>
            A class that represents the address of an iCalendar user.
            In iCalendar terms, this is usually represented by an
            e-mail address, in the following form:
            <c>MAILTO:email.address@host.com</c>
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.EventStatus">
            <summary>
            Status codes available to an <see cref="!:Event"/> item
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Recur">
            <summary>
            Represents an RFC 2445 "BYDAY" value.
            </summary>
            <summary>
            An iCalendar representation of the <c>RRULE</c> property.
            </summary>
        </member>
        <member name="M:DDay.iCal.DataTypes.Recur.Copy">
            <summary>
            Returns a typed copy of the object.
            </summary>
            <returns>A typed copy of the object.</returns>
        </member>
        <member name="M:DDay.iCal.DataTypes.Recur.FillYearDays(DDay.iCal.DataTypes.Recur.TimeCalculation)">
            <summary>
            NOTE: fixes RRULE25
            </summary>
            <param name="TC"></param>
        </member>
        <member name="M:DDay.iCal.DataTypes.Recur.FillByDay(DDay.iCal.DataTypes.Recur.TimeCalculation)">
            <summary>
            NOTE: fixes RRULE26
            </summary>
            <param name="TC"></param>
        </member>
        <member name="T:DDay.iCal.DataTypes.RequestStatus">
            <summary>
            A class that represents the return status of an iCalendar request.
            </summary>
        </member>
        <member name="T:DDay.iCal.Components.FreeBusy">
            <summary>
            <note>This class has not yet been implemented.</note>
            </summary>
        </member>
        <member name="M:DDay.iCal.Components.FreeBusy.Copy">
            <summary>
            Returns a typed copy of the FreeBusy object.
            </summary>
            <returns>A typed copy of the FreeBusy object.</returns>
        </member>
        <member name="T:DDay.iCal.DataTypes.UTC_Offset">
            <summary>
            Represents a time offset from UTC (Coordinated Universal Time).
            </summary>
        </member>
        <member name="M:DDay.iCal.DataTypes.UTC_Offset.Copy">
            <summary>
            Returns a typed copy of the object.
            </summary>
            <returns>A typed copy of the object.</returns>
        </member>
        <member name="T:DDay.iCal.DataTypes.Binary">
            <summary>
            A class to handle binary attachments, or URIs as binary attachments, within an iCalendar. 
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.EncodableDataType">
            <summary>
            An abstract class that represents an iCalendar data type which
            accepts the ENCODING parameter.
            </summary>
        </member>
        <member name="M:DDay.iCal.DataTypes.Binary.LoadDataFromUri">
            <summary>
            Loads (fills) the <c>Data</c> property with the file designated
            at the given <see cref="T:DDay.iCal.DataTypes.URI"/>.
            </summary>
        </member>
        <member name="M:DDay.iCal.DataTypes.Binary.LoadDataFromUri(System.String,System.String)">
            <summary>
            Loads (fills) the <c>Data</c> property with the file designated
            at the given <see cref="T:DDay.iCal.DataTypes.URI"/>.
            </summary>
            <param name="username">The username to supply for credentials</param>
            <param name="password">The pasword to supply for credentials</param>
        </member>
        <member name="M:DDay.iCal.DataTypes.Binary.LoadDataFromUri(System.Uri,System.String,System.String)">
            <summary>
            Loads (fills) the <c>Data</c> property with the file designated
            at the given <see cref="T:DDay.iCal.DataTypes.URI"/>.
            </summary>
            <param name="uri">The Uri from which to download the <c>Data</c></param>
            <param name="username">The username to supply for credentials</param>
            <param name="password">The pasword to supply for credentials</param>
        </member>
        <member name="T:DDay.iCal.DataTypes.TextCollection">
            <summary>
            Contains a collection of <see cref="T:DDay.iCal.DataTypes.Text"/> objects.
            When parsing a TextCollection, <see cref="T:DDay.iCal.DataTypes.Text"/> objects 
            are separated by commas.
            <example>
                For example, <c>CATEGORIES:Business,Personal,Something with a comma\,</c>
            </example>
            </summary>   
        </member>
        <member name="T:DDay.iCal.iCalendar">
            <summary>
            A class that represents an iCalendar object.  To load an iCalendar object, generally a
            static LoadFromXXX method is used.
            <example>
                For example, use the following code to load an iCalendar object from a URL:
                <code>
                   iCalendar iCal = iCalendar.LoadFromUri(new Uri("http://somesite.com/calendar.ics"));
                </code>
            </example>
            Once created, an iCalendar object can be used to gather relevant information about
            events, todos, time zones, journal entries, and free/busy time.
            </summary>
            <remarks>
            <para>
            The following is an example of loading an iCalendar and displaying a text-based calendar.
            
            <code>
            //
            // The following code loads and displays an iCalendar 
            // with US Holidays for 2006.
            //
            iCalendar iCal = iCalendar.LoadFromUri(new Uri("http://www.applegatehomecare.com/Calendars/USHolidays.ics"));
            iCal.Evaluate(
                new Date_Time(2006, 1, 1, "US-Eastern", iCal),
                new Date_Time(2006, 12, 31, "US-Eastern", iCal));
            
            Date_Time dt = new Date_Time(2006, 1, 1, "US-Eastern", iCal);
            while (dt.Year == 2006)
            {
                // First, display the current date we're evaluating
                Console.WriteLine(dt.Local.ToShortDateString());
            
                // Then, iterate through each event in our iCalendar
                foreach (Event evt in iCal.Events)
                {
                    // Determine if the event occurs on the specified date
                    if (evt.OccursOn(dt))
                    {
                        // Display the event summary
                        Console.Write("\t" + evt.Summary);
            
                        // Display the time the event happens (unless it's an all-day event)
                        if (evt.Start.HasTime)
                        {
                            Console.Write(" (" + evt.Start.Local.ToShortTimeString() + " - " + evt.End.Local.ToShortTimeString());
                            if (evt.Start.TimeZoneInfo != null)
                                Console.Write(" " + evt.Start.TimeZoneInfo.TimeZoneName);
                            Console.Write(")");
                        }
            
                        Console.Write(Environment.NewLine);
                    }
                }
            
                // Move to the next day
                dt = dt.AddDays(1);
            }
            </code>
            </para>
            <para>
            The following example loads all active to-do items from an iCalendar:
            
            <code>
            //
            // The following code loads and displays active todo items from an iCalendar
            // for January 6th, 2006.
            //
            iCalendar iCal = iCalendar.LoadFromUri(new Uri("http://somesite.com/calendar.ics"));
            iCal.Evaluate(
                new Date_Time(2006, 1, 1, "US-Eastern", iCal),
                new Date_Time(2006, 1, 31, "US-Eastern", iCal));
            
            Date_Time dt = new Date_Time(2006, 1, 6, "US-Eastern", iCal);
            foreach(Todo todo in iCal.Todos)
            {
                if (todo.IsActive(dt))
                {
                    // Display the todo summary
                    Console.WriteLine(todo.Summary);
                }
            }
            </code>
            </para>
            </remarks>
        </member>
        <member name="M:DDay.iCal.iCalendar.#ctor">
            <summary>
            To load an existing an iCalendar object, use one of the provided LoadFromXXX methods.
            <example>
            For example, use the following code to load an iCalendar object from a URL:
            <code>
                iCalendar iCal = iCalendar.LoadFromUri(new Uri("http://somesite.com/calendar.ics"));
            </code>
            </example>
            </summary>
        </member>
        <member name="M:DDay.iCal.iCalendar.AddChild(DDay.iCal.Objects.iCalObject)">
            <summary>
            Adds an <see cref="T:DDay.iCal.Objects.iCalObject"/>-based component to the
            appropriate collection.  Currently, the iCalendar component
            supports the following components:
                <list type="bullet">        
                    <item><see cref="T:DDay.iCal.Components.Event"/></item>
                    <item><see cref="P:DDay.iCal.iCalendar.FreeBusy"/></item>
                    <item><see cref="T:DDay.iCal.Components.Journal"/></item>
                    <item><see cref="T:DDay.iCal.Components.TimeZone"/></item>
                    <item><see cref="T:DDay.iCal.Components.Todo"/></item>
                </list>
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:DDay.iCal.iCalendar.RemoveChild(DDay.iCal.Objects.iCalObject)">
            <summary>
            Removes an <see cref="T:DDay.iCal.Objects.iCalObject"/>-based component from all
            of the collections that this object may be contained in within
            the iCalendar.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:DDay.iCal.iCalendar.OnLoad(System.EventArgs)">
            <summary>
            Resolves each UID in the UniqueComponents list
            to a valid UID.  When the UIDs are updated, each
            UniqueComponentList that contains the UniqueComponent
            will be updated as well.
            </summary>
        </member>
        <member name="M:DDay.iCal.iCalendar.Copy">
            <summary>
            Creates a typed copy of the iCalendar.
            </summary>
            <returns>An iCalendar object.</returns>
        </member>
        <member name="M:DDay.iCal.iCalendar.LoadFromFile(System.String)">
            <summary>
            Loads an <see cref="T:DDay.iCal.iCalendar"/> from the file system.
            </summary>
            <param name="Filepath">The path to the file to load.</param>
            <returns>An <see cref="T:DDay.iCal.iCalendar"/> object</returns>
        </member>
        <member name="M:DDay.iCal.iCalendar.LoadFromStream(System.IO.Stream)">
            <summary>
            Loads an <see cref="T:DDay.iCal.iCalendar"/> from an open stream.
            </summary>
            <param name="s">The stream from which to load the <see cref="T:DDay.iCal.iCalendar"/> object</param>
            <returns>An <see cref="T:DDay.iCal.iCalendar"/> object</returns>
        </member>
        <member name="M:DDay.iCal.iCalendar.LoadFromUri(System.Uri)">
            <summary>
            Loads an <see cref="T:DDay.iCal.iCalendar"/> from a given Uri.
            </summary>
            <param name="url">The Uri from which to load the <see cref="T:DDay.iCal.iCalendar"/> object</param>
            <returns>An <see cref="T:DDay.iCal.iCalendar"/> object</returns>
        </member>
        <member name="M:DDay.iCal.iCalendar.LoadFromUri(System.Uri,System.String,System.String)">
            <summary>
            Loads an <see cref="T:DDay.iCal.iCalendar"/> from a given Uri, using a 
            specified <paramref name="username"/> and <paramref name="password"/>
            for credentials.
            </summary>
            <param name="url">The Uri from which to load the <see cref="T:DDay.iCal.iCalendar"/> object</param>
            <returns>an <see cref="T:DDay.iCal.iCalendar"/> object</returns>
        </member>
        <member name="M:DDay.iCal.iCalendar.GetTimeZone(DDay.iCal.DataTypes.TZID)">
            <summary>
            Retrieves the <see cref="T:DDay.iCal.Components.TimeZone"/> object for the specified
            <see cref="T:DDay.iCal.DataTypes.TZID"/> (Time Zone Identifier).
            </summary>
            <param name="tzid">A valid <see cref="T:DDay.iCal.DataTypes.TZID"/> object, or a valid <see cref="T:DDay.iCal.DataTypes.TZID"/> string.</param>
            <returns>A <see cref="!:TimeZone"/> object for the <see cref="T:DDay.iCal.DataTypes.TZID"/>.</returns>
        </member>
        <member name="M:DDay.iCal.iCalendar.Evaluate(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Evaluates component recurrences for the given range of time.
            <example>
                For example, if you are displaying a month-view for January 2007,
                you would want to evaluate recurrences for Jan. 1, 2007 to Jan. 31, 2007
                to display relevant information for those dates.
            </example>
            </summary>
            <param name="FromDate">The beginning date/time of the range to test.</param>
            <param name="ToDate">The end date/time of the range to test.</param>                
        </member>
        <member name="M:DDay.iCal.iCalendar.MergeWith(DDay.iCal.iCalendar)">
            <summary>
            Merges the current <see cref="T:DDay.iCal.iCalendar"/> with another iCalendar.
            <note>
                Since each object is associated with one and only one iCalendar object,
                the <paramref name="iCal"/> that is passed is automatically Disposed
                in the process, because all of its objects are re-assocated with the new iCalendar.
            </note>
            </summary>
            <param name="iCal">The iCalendar to merge with the current <see cref="T:DDay.iCal.iCalendar"/></param>
        </member>
        <member name="M:DDay.iCal.iCalendar.Create(DDay.iCal.Objects.iCalObject,System.String)">
            <summary>
            Invokes the object creation of the selected ComponentBase class.  By default,
            this is the ComponentBase class itself; however, this can be changed to allow
            for custom objects to be created in lieu of Event, Todo, Journal, etc. components.
            </summary>
            <param name="parent">The parent of the object to create.</param>
            <param name="name">The name of the iCal object.</param>
            <returns></returns>
        </member>
        <member name="P:DDay.iCal.iCalendar.Events">
            <summary>
            A collection of <see cref="T:DDay.iCal.Components.Event"/> components in the iCalendar.
            </summary>
        </member>
        <member name="P:DDay.iCal.iCalendar.FreeBusy">
            <summary>
            A collection of <see cref="T:DDay.iCal.Components.FreeBusy"/> components in the iCalendar.
            </summary>
        </member>
        <member name="P:DDay.iCal.iCalendar.Journals">
            <summary>
            A collection of <see cref="T:DDay.iCal.Components.Journal"/> components in the iCalendar.
            </summary>
        </member>
        <member name="P:DDay.iCal.iCalendar.TimeZones">
            <summary>
            A collection of <see cref="T:DDay.iCal.Components.TimeZone"/> components in the iCalendar.
            </summary>
        </member>
        <member name="P:DDay.iCal.iCalendar.Todos">
            <summary>
            A collection of <see cref="T:DDay.iCal.Components.Todo"/> components in the iCalendar.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Integer">
            <summary>
            Represents in iCalendar integer
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.RDate">
            <summary>
            An iCalendar list of recurring dates (or date exclusions)
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.TZID">
            <summary>
            A time zone identifier, used to associate <see cref="T:DDay.iCal.DataTypes.Date_Time"/> (and other) objects
            with a specific time zone.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.JournalStatus">
            <summary>
            Status codes available to a <see cref="!:Journal"/> entry.
            </summary>    
        </member>
        <member name="T:DDay.iCal.Components.Todo">
            <summary>
            A class that represents an RFC 2445 VTODO component.
            </summary> 
        </member>
        <member name="M:DDay.iCal.Components.Todo.IsCompleted(DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Use this method to determine if a todo item has been completed.
            This takes into account recurrence items and the previous date
            of completion, if any.
            </summary>
            <param name="DateTime">The date and time to test.</param>
            <returns>True if the todo item has been completed</returns>
        </member>
        <member name="M:DDay.iCal.Components.Todo.IsActive(DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Returns 'True' if the todo item is Active as of <paramref name="currDt"/>.
            An item is Active if it requires action of some sort.
            </summary>
            <param name="currDt">The date and time to test.</param>
            <returns>True if the item is Active as of <paramref name="currDt"/>, False otherwise.</returns>
        </member>
        <member name="M:DDay.iCal.Components.Todo.IsCancelled">
            <summary>
            Returns True if the todo item was cancelled.
            </summary>
            <returns>True if the todo was cancelled, False otherwise.</returns>
        </member>
        <member name="M:DDay.iCal.Components.Todo.OnLoad(System.EventArgs)">
            <summary>
            Automatically derives property values based on others it
            contains, to provide a more "complete" object.
            </summary>
            <param name="e"></param>        
        </member>
        <member name="M:DDay.iCal.Components.Todo.Copy">
            <summary>
            Returns a typed copy of the Todo object.
            </summary>
            <returns>A typed copy of the Todo object.</returns>
        </member>
        <member name="P:DDay.iCal.Components.Todo.DTStart">
            <summary>
            The start date/time of the todo item.
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.Todo.Due">
            <summary>
            The due date of the todo item.
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.Todo.Duration">
            <summary>
            The duration of the todo item.
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.Todo.Status">
            <summary>
            The status of the todo item.
            </summary>
        </member>
        <member name="T:DDay.iCal.Objects.UniqueComponentList`1">
            <summary>
            A collection of iCalendar components.  This class is used by the 
            <see cref="T:DDay.iCal.iCalendar"/> class to maintain a collection of events,
            to-do items, journal entries, and free/busy times.
            </summary>
        </member>
        <member name="M:DDay.iCal.Objects.UniqueComponentList`1.ResolveUIDs">
            <summary>
            Re-links the UID dictionary to the actual components in our list.
            Also, if any items do not have a UID assigned to them, they will
            automatically have a UID assigned.
            </summary> 
        </member>
        <member name="T:DDay.iCal.DataTypes.Duration">
            <summary>
            The iCalendar equivalent of the .NET <see cref="T:System.TimeSpan"/> class.
            <remarks>
            This class handles parsing an RFC 2445 Duration.
            </remarks>
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Geo">
            <summary>
            A class that represents the geographical location of an
            <see cref="!:Event"/> or <see cref="!:Todo"/> item.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Float">
            <summary>
            Represents an RFC 2445 floating-point decimal value.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Period">
            <summary>
            Represents an iCalendar period of time.
            </summary>
        </member>
        <member name="F:DDay.iCal.DataTypes.Period.MatchesDateOnly">
            <summary>
            When true, comparisons between this and other <see cref="T:DDay.iCal.DataTypes.Period"/>
            objects are matched against the date only, and
            not the date-time combination.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.Text">
            <summary>
            Represents an RFC 2445 "text" value.
            </summary>
        </member>
        <member name="T:DDay.iCal.DataTypes.StatusCode">
            <summary>
            An iCalendar status code.
            </summary>
        </member>
        <member name="T:DDay.iCal.Objects.Parameter">
            <summary>
            A class that provides additional information about a <see cref="T:DDay.iCal.Objects.ContentLine"/>.
            </summary>
            <remarks>
            <example>
            For example, a DTSTART line may look like this: <c>DTSTART;VALUE=DATE:20060116</c>.  
            The <c>VALUE=DATE</c> portion is a <see cref="T:DDay.iCal.Objects.Parameter"/> of the DTSTART value.
            </example>
            </remarks>
        </member>
        <member name="T:DDay.iCal.DataTypes.TodoStatus">
            <summary>
            Status codes available to a <see cref="!:Todo"/> item.
            </summary>    
        </member>
        <member name="T:DDay.iCal.Components.Event">
            <summary>
            A class that represents an RFC 2445 VEVENT component.
            </summary>
            <note>
                TODO: Add support for the following properties:
                <list type="bullet">
                    <item>Add support for the Organizer and Attendee properties</item>
                    <item>Add support for the Class property</item>
                    <item>Add support for the Geo property</item>
                    <item>Add support for the Priority property</item>
                    <item>Add support for the Related property</item>
                    <item>Create a TextCollection DataType for 'text' items separated by commas</item>
                </list>
            </note>
        </member>
        <member name="F:DDay.iCal.Components.Event.Geo">
            <summary>
            The geographic location (lat/long) of the event.
            </summary>
        </member>
        <member name="F:DDay.iCal.Components.Event.Location">
            <summary>
            The location of the event.
            </summary>
        </member>
        <member name="F:DDay.iCal.Components.Event.Resources">
            <summary>
            Resources that will be used during the event.
            <example>Conference room #2</example>
            <example>Projector</example>
            </summary>
        </member>
        <member name="F:DDay.iCal.Components.Event.Status">
            <summary>
            The status of the event.
            </summary>
        </member>
        <member name="F:DDay.iCal.Components.Event.Transp">
            <summary>
            The transparency of the event.  In other words,
            whether or not the period of time this event
            occupies can contain other events (transparent),
            or if the time cannot be scheduled for anything
            else (opaque).
            </summary>
        </member>
        <member name="M:DDay.iCal.Components.Event.#ctor(DDay.iCal.Objects.iCalObject)">
            <summary>
            Constructs an Event object, with an <see cref="T:DDay.iCal.Objects.iCalObject"/>
            (usually an iCalendar object) as its parent.
            </summary>
            <param name="parent">An <see cref="T:DDay.iCal.Objects.iCalObject"/>, usually an iCalendar object.</param>
        </member>
        <member name="M:DDay.iCal.Components.Event.OccursOn(DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Use this method to determine if an event occurs on a given date.
            <note type="caution">
                This event should be called only after the <see cref="M:DDay.iCal.Components.Event.Evaluate(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)"/>
                method has calculated the dates for which this event occurs.
            </note>
            </summary>
            <param name="DateTime">The date to test.</param>
            <returns>True if the event occurs on the <paramref name="DateTime"/> provided, False otherwise.</returns>
        </member>
        <member name="M:DDay.iCal.Components.Event.OccursAt(DDay.iCal.DataTypes.Date_Time)">
            <summary>
            Use this method to determine if an event begins at a given date and time.
            </summary>
            <param name="DateTime">The date and time to test.</param>
            <returns>True if the event begins at the given date and time</returns>
        </member>
        <member name="M:DDay.iCal.Components.Event.IsActive">
            <summary>
            Determines whether or not the <see cref="T:DDay.iCal.Components.Event"/> is actively displayed
            as an upcoming or occurred event.
            </summary>
            <returns>True if the event has not been cancelled, False otherwise.</returns>
        </member>
        <member name="M:DDay.iCal.Components.Event.FlattenRecurrenceOn(DDay.iCal.DataTypes.Date_Time)">
            <summary>
            "Flattens" an event recurrence so it contains a non-recurring
            event on the specific day of the recurrence.
            </summary>
            <param name="dt">The date on which the event recurs</param>
            <returns>An event if it could be flattened, null otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDay.iCal.Components.Event.Evaluate(DDay.iCal.DataTypes.Date_Time,DDay.iCal.DataTypes.Date_Time)" -->
        <member name="M:DDay.iCal.Components.Event.Copy">
            <summary>
            Returns a typed copy of the Event object.
            </summary>
            <returns>A typed copy of the Event object.</returns>
        </member>
        <member name="P:DDay.iCal.Components.Event.DTStart">
            <summary>
            The start date/time of the event.
            <note>
            If the duration has not been set, but
            the start/end time of the event is available,
            the duration is automatically determined.
            Likewise, if the end date/time has not been
            set, but a start and duration are available,
            the end date/time will be extrapolated.
            </note>
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.Event.DTEnd">
            <summary>
            The end date/time of the event.
            <note>
            If the duration has not been set, but
            the start/end time of the event is available,
            the duration is automatically determined.
            Likewise, if an end time and duration are available,
            but a start time has not been set, the start time
            will be extrapolated.
            </note>
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.Event.Duration">
            <summary>
            The duration of the event.
            <note>
            If a start time and duration is available,
            the end time is automatically determined.
            Likewise, if the end time and duration is
            available, but a start time is not determined,
            the start time will be extrapolated from
            available information.
            </note>
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.Event.End">
            <summary>
            An alias to the DTEnd field (i.e. end date/time).
            </summary>
        </member>
        <member name="P:DDay.iCal.Components.Event.IsAllDay">
            <summary>
            Returns true of the event is an all-day event.
            </summary>
        </member>
    </members>
</doc>
